<%= form_with(model: source, scope: :source, url: source.new_record? ? sources_path : source_path(source)) do |form| %>
  <% if source.errors.any? %>
    <div class="alert alert-danger">
      <h5><%= pluralize(source.errors.count, "error") %> prohibited this source from being saved:</h5>
      <ul>
        <% source.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <% unless source.persisted? %>
    <%= form.hidden_field :type %>
  <% end %>

  <div class="mb-3">
    <%= form.label :name, class: "form-label" %>
    <%= form.text_field :name, class: "form-control", required: true %>
  </div>

  <div class="mb-3">
    <%= form.label :url, class: "form-label" %>
    <%= form.url_field :url, class: "form-control", required: true %>
    <div class="form-text">Enter the full URL (e.g., https://example.com/api).</div>
  </div>

  <%= render "#{source.class.display_name.parameterize(separator: "_")}_fields", form: form, source: source %>

  <div class="mb-3 form-check">
    <%= form.check_box :transfer_on_import, class: "form-check-input" %>
    <%= form.label :transfer_on_import, "Transfer on import?", class: "form-check-label" %>
    <div class="form-text">If checked, records are immediately queued for transfer after import.</div>
  </div>

  <div class="d-flex justify-content-between">
    <%= link_to "Cancel", :back, class: "btn btn-outline-secondary" %>
    <%= form.submit "Submit", class: "btn btn-primary" %>
  </div>
<% end %>